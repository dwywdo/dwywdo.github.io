<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spring on dwywdo</title>
    <link>https://dwywdo.github.io/tags/spring/</link>
    <description>Recent content in Spring on dwywdo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 05 May 2021 03:12:19 +0900</lastBuildDate><atom:link href="https://dwywdo.github.io/tags/spring/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spring Bean</title>
      <link>https://dwywdo.github.io/post/spring-bean/</link>
      <pubDate>Wed, 05 May 2021 03:12:19 +0900</pubDate>
      
      <guid>https://dwywdo.github.io/post/spring-bean/</guid>
      <description>Spring의 Bean에 대하여   Spring의 IoC 컨테이너에 의해 관리되는 하나 이상의 객체들을 모두 빈(Bean)이라고 부른다.  빈은 IoC 컨테이너 생성 시 제공하는 Configuration Metadata에 의해 생성된다. 예를 들어 XML기반의 메타데이터 구성 시 &amp;lt;bean/&amp;gt; 태그를 통해서 생성된다 빈의 정의 그 자체에 대한 내용은 컨테이너 내부에서 BeanDefinition이라는 객체로 표현되며, 아래와 같은 정보들을 담고 있다.  Package-qualified 클래스 이름 (정의된 빈의 실제 구현 클래스) Behavioral 설정 요소 (Scope, Lifecycle callbacks와 같은 정보) Collaborator / Depedency 정보 (해당 빈이 동작하기 위해 필요한 다른 빈들에 대한 레퍼런스) 다른 설정 정보들 (예를 들어 Connection Pool을 관리하는 빈 내에서의 Pool 사이즈, 커넥션의 수 제한 등)   위의 요소들은 모두 Bean Definition을 구성하는 속성들이라고 볼 수 있으며, 스프링 문서의 여러 장에 걸쳐서 각각 소개되고 있다.</description>
    </item>
    
    <item>
      <title>Spring IoC</title>
      <link>https://dwywdo.github.io/post/spring-ioc/</link>
      <pubDate>Sat, 01 May 2021 16:17:13 +0900</pubDate>
      
      <guid>https://dwywdo.github.io/post/spring-ioc/</guid>
      <description>IoC 컨테이너   스프링 프레임워크에서 지키며 기능으로서 제공하는 IoC 원칙은 의존성 주입 (Dependency Injection, DI)라고도 불린다.   It is a process whereby objects define their dependencies (that is, the other objects they work with) only through constructor arguments, arguments to a factory method, or properties that are set on the object instance after it is constructed or returned from a factory method.
   위의 문구는 Spring framework documentation에서 IoC에 대해 설명한 문장을 발췌해온 것으로, 풀어 써보면 아래와 같다.</description>
    </item>
    
  </channel>
</rss>
